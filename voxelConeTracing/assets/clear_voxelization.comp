#version 420 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable
#extension GL_ARB_compute_variable_group_size : enable

#include "dat.glsl"

/*struct Voxel
{
  vec3 N;//normal
  vec3 Cd; //color
};*/
layout( std430, binding = 0 ) buffer VoxelBuffer
{
    Voxel voxels[];
};

layout( local_size_x = WG_SIZE_X, local_size_y = WG_SIZE_Y, local_size_z = WG_SIZE_Z ) in;

void main(){
	uint gid = gl_GlobalInvocationID.x;	// The .y and .z are both 1 in this case.
    voxels[gid].Cd = vec3(0.0f);//v2.Cd;
    //voxels[gid].N = vec3(0.0f);
    voxels[gid].Alpha = 0.0f;
    
}