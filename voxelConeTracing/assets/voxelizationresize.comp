#version 420 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable
#extension GL_ARB_compute_variable_group_size : enable

uniform float uVoxelResolution;
uniform float uBufferSize;

struct Voxel
{
  vec3 N;//normal
  vec3 Cd; //color
};

layout( std430, binding = 0 ) buffer VoxelBuffer
{
    Voxel voxels[];
};
layout( std430, binding = 1 )  buffer VoxelResizedBuffer
{
    Voxel voxelsresized[];
};

layout( local_size_x = WG_SIZE_X, local_size_y = WG_SIZE_Y, local_size_z = WG_SIZE_Z ) in;

////////////
//////////////////////////
//
////////////////////////////////////
/////////////////////////////////////

void main(){
	uint gid = gl_GlobalInvocationID.x;	// The .y and .z are both 1 in this case.
  	if( gid >= uBufferSize )
    	return;

    //uVoxelResolution/2
    voxelsresized[gid].Cd = vec3(1.0f);//v0.Cd;
    //voxels[ind1].Cd = vec3(1.0f);//v1.Cd;

    
}