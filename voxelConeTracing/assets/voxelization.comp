#version 420 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable
#extension GL_ARB_compute_variable_group_size : enable

uniform uint uBufferSize;
uniform float uTime;

struct Voxel
{
  vec3 P;  //position
  vec3 Cd; //color
};

layout( std140, binding = 0 ) buffer Vox
{
    Voxel voxels[];
};
layout( std140, binding = 1 ) buffer Mesh
{
    Mesh mesh[];
};

layout( local_size_x = WG_SIZE_X, local_size_y = WG_SIZE_Y, local_size_z = WG_SIZE_Z ) in;

void main(){
	uint gid = gl_GlobalInvocationID.x;	// The .y and .z are both 1 in this case.
  	if( gid >= uBufferSize )
    	return;

    voxels[gid].Cd = vec3(1,0,0);
}