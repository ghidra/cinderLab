#version 420 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable
#extension GL_ARB_compute_variable_group_size : enable

#include "dat.glsl"

/*struct Geo{
	vec3 P; //position
    vec3 N; //normal
    vec4 uv; //2 uv channels
    vec3 Cd; //color diffuse
    vec3 Cs; //color spec
    float Rd; //Reflectivity diffuse
    float Rs; //reflectivity specular
    float e; //emisivity
    float t; //tranparency
    //vec4 lit;///lighting result
};*/

layout( std430, binding = 1 )  buffer TriBuffer
{
    Geo Triangles[];
};

layout( local_size_x = WG_SIZE_X, local_size_y = WG_SIZE_Y, local_size_z = WG_SIZE_Z ) in;


void main(){
	uint gid = gl_GlobalInvocationID.x;	// The .y and .z are both 1 in this case.
    Geo v;
    v.P = vec3(0.0f);
    v.N = vec3(0.0f);
    v.uv = vec4(0.0f);
    v.Cd = vec3(0.0f);
    v.Cs = vec3(0.0f);
    v.Rd = 0.0f;
    v.Rs = 0.0f;
    v.e = 0.0f;
    v.t = 0.0f;

    Triangles[(gid+1)*3] = v;
    Triangles[((gid+1)*3)+1] = v;
    Triangles[((gid+1)*3)+2] = v;
    if(gid<=0) Triangles[0] = v;
}